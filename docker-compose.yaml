services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - appnetwork

  gateway:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/biosimulators/verification-server-gateway:0.0.1
    container_name: gateway
    environment:
      - MONGO_URI="mongodb://mongodb/?retryWrites=true&w=majority&appName=verification-server"
      - MONGO_USERNAME=alex
      - MONGO_DB_PWD=123
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/.bio-check.json
      - DB_NAME=service_requests
      - BUCKET_NAME=files-biochecknet
      - CONTENT_DIR=gateway
    ports:
      - "3001:3001"
    networks:
      - appnetwork

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    image: ghcr.io/biosimulators/verification-server-worker:0.0.1
    container_name: worker
    environment:
      - MONGO_URI="mongodb://mongodb/?retryWrites=true&w=majority&appName=verification-server"
      - MONGO_USERNAME=alex
      - MONGO_DB_PWD=123
      - GOOGLE_APPLICATION_CREDENTIALS=/.google/.bio-check.json
      - DB_NAME=service_requests
      - BUCKET_NAME=files-biochecknet
      - CONTENT_DIR=worker
    networks:
      - appnetwork
    command:
      sh -c "
      cd worker
      poetry run python main.py
      "

networks:
  appnetwork:
    driver: bridge


# to run with a local network:
# net=app-net
# docker network create "$net"
# docker run -d --rm --name "$lib" --net "$net" --platform linux/amd64 "$PKG_ROOT"-"$lib":latest
# docker run -it --name "$lib" --net "$net" --platform linux/amd64 "$PKG_ROOT"-"$lib"
# The API will be available at http://localhost:3001 once docker compose up is run